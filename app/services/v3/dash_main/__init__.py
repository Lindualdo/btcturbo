# app/services/v3/dash_main/__init__.py

"""
Dashboard Main V3 - ExecuÃ§Ã£o TÃ¡tica Implementada

Estrutura Camada 4:
â”œâ”€â”€ execucao_tatica_service.py     # ServiÃ§o principal
â”œâ”€â”€ utils/
â”‚   â”œâ”€â”€ gate_system_utils.py       # 4 validaÃ§Ãµes + overrides
â”‚   â”œâ”€â”€ setup_detector_utils.py    # Matriz setups 4H
â”‚   â””â”€â”€ tecnicos_utils.py          # RSI + EMA144 4H
â””â”€â”€ helpers/
    â”œâ”€â”€ comprar_helper.py          # EstratÃ©gia compra âœ…
    â”œâ”€â”€ vender_helper.py           # EstratÃ©gia venda ðŸ”„ mock
    â””â”€â”€ stop_helper.py             # Stop loss ðŸ”„ mock

Fluxo Camada 4:
1. Gate System (4 validaÃ§Ãµes + overrides especiais)
2. Dados TÃ©cnicos 4H (RSI, EMA144, distÃ¢ncia)  
3. IdentificaÃ§Ã£o Setup (PULLBACK, TESTE_SUPORTE, ROMPIMENTO, OVERSOLD)
4. DecisÃ£o EstratÃ©gica (COMPRAR, AJUSTAR_ALAVANCAGEM, BLOQUEADO, AGUARDAR)

Status:
- âœ… Gate System implementado
- âœ… Setup Detection implementado  
- âœ… EstratÃ©gia Compra implementada
- ðŸ”„ EstratÃ©gia Venda mockada (futura)
- ðŸ”„ Stop Loss mockado (futura)
"""

#from .execucao_tatica_service import executar_execucao_tatica
#from .utils.gate_system_utils import aplicar_gate_system
#from .utils.setup_detector_utils import identificar_setup_4h
#from .utils.tecnicos_utils import obter_dados_tecnicos_4h
#from .utils.helpers.comprar_helper import processar_estrategia_compra
#from .utils.helpers.vender_helper import processar_estrategia_venda
#from .utils.helpers.stop_helper import processar_estrategia_stop